<?xml version="1.0" encoding="utf-8" ?> <helpItems xmlns="http://msh" schema="maml">

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
            Add-Signature
		</command:name>
		<maml:description>
			<maml:para>Creates a new WMI Event Subscription (Filter, Consumer, Binding) on a local or remote hosts.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para>(c) 2014 Invoke-IR. All rights reserved.</maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>Signature</command:noun>
		<dev:version>1.0.0.0</dev:version>
	</command:details>
	<maml:description>
		<maml:para>The Add-Signature cmdlet creates a new WMI Event Subscription, and sets it parameters. The cmdlet makes three seperate WMI objects, an __EventFilter, a Consumer (CommandLineEventConsumer or LogFileEventConsumer), and a __FilterToConsumerBinding.</maml:para>
	</maml:description>

<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-Signature</maml:name>
            <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Creates a New WMI Event Subscriptions running on the specified computers. The default is the local computer.</maml:para>
                    <maml:para>Type the NetBIOS name, and IP address, or a fully qulaified domain name of one or more computers.</maml:para>
                    <maml:para>This parameter does not rely on Windows PowerShell remoting.  You can use the ComputerName parameter of Get-Signature as long as the remote computer has its RPC Server running.  Additionally, PowerShell must be run with appropriate credentials for the remote endpoint.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the Name of the Signature (WMI Event Subscription).  The same name will be used for the Filter, Consumer, and Binding.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Type is used to specify what type of EventConsumer to use.  The options are the CommandLineEventConsumer and LogFileEventConsumer.  The default is CommandLineEventConsumer.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false">
   			 <maml:name>FilePath</maml:name>
    			<maml:description>
				    <maml:para>Provides the path location of the file the subscription will output to for the LogFileEventConsumer.</maml:para>
                    <maml:para>A remote file path can be specified using the Universal Naming Convention Path (e.g. \\computer\C$\output.txt).</maml:para>
    			    <maml:para>If a remote file path is used, the location must be writable by the Domain Computers group (the host's Computer Account).</maml:para>
                </maml:description>
    			<command:parameterValue required="true" variableLength="true">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
   			 <maml:name>FileName</maml:name>
    			<maml:description>
				    <maml:para>Provides the name of the output file for the LogFileEventConsumer.</maml:para>
                    <maml:para>Default file name is target hostname.</maml:para>
    			</maml:description>
    			<command:parameterValue required="true" variableLength="true">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false">
   			 <maml:name>Query</maml:name>
    			<maml:description>
				    <maml:para>The WMI Query Language Query that will be used by the __EventFilter.</maml:para>
    			</maml:description>
    			<command:parameterValue required="true" variableLength="true">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false">
   			 <maml:name>Text</maml:name>
    			<maml:description>
				    <maml:para>Sets the text to output for the LogFileEventConsumer</maml:para>
    			</maml:description>
				<command:parameterValue required="true" variableLength="true">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
   			 <maml:name>Force</maml:name>
    			<maml:description>
				    <maml:para>Allows the cmdlet to overwrite a signature that already exists.</maml:para>
    			</maml:description>
                <command:parameterValue required="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>

<!-- Cmdlet parameter section  -->
	<command:parameters>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
			<maml:name>ComputerName</maml:name>
			<maml:description>
				<maml:para>Creates a New WMI Event Subscriptions running on the specified computers. The default is the local computer.</maml:para>
                <maml:para>Type the NetBIOS name, and IP address, or a fully qulaified domain name of one or more computers.</maml:para>
                <maml:para>This parameter does not rely on Windows PowerShell remoting.  You can use the ComputerName parameter of Get-Signature as long as the remote computer has its RPC Server running.  Additionally, PowerShell must be run with appropriate credentials for the remote endpoint.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="true">string[]</command:parameterValue>			
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>localhost</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Type is used to specify what type of EventConsumer to use.  The options are the CommandLineEventConsumer and LogFileEventConsumer.  The default is CommandLineEventConsumer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the Name of the Signature (WMI Event Subscription).  The same name will be used for the Filter, Consumer, and Binding.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
   			<maml:name>Force</maml:name>
    		<maml:description>
				<maml:para>Allows the cmdlet to overwrite a signature that already exists.</maml:para>
    		</maml:description>
    		<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>  	
			<dev:type>
  			<maml:name>SwitchParameter</maml:name> 
				<maml:uri /> 
				</dev:type>
 		<dev:defaultValue /> 
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false">
   			<maml:name>Query</maml:name>
    		<maml:description>
				<maml:para>The WMI Query Language Query that will be used by the __EventFilter.</maml:para>
    		</maml:description>
    		<command:parameterValue required="false" variableLength="false">string</command:parameterValue>
			<dev:type>
  			<maml:name>string</maml:name> 
				<maml:uri /> 
				</dev:type>
 		<dev:defaultValue /> 
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false">
   			<maml:name>FilePath</maml:name>
    		<maml:description>
				<maml:para>Provides the path location of the file the subscription will output to for the LogFileEventConsumer.</maml:para>
                <maml:para>A remote file path can be specified using the Universal Naming Convention Path (e.g. \\computer\C$\output.txt).</maml:para>
    			<maml:para>If a remote file path is used, the location must be writable by the Domain Computers group (the host's Computer Account).</maml:para>
    		</maml:description>
    		<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
  			<maml:name>string</maml:name> 
				<maml:uri /> 
				</dev:type>
 		<dev:defaultValue /> 
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
   			<maml:name>FileName</maml:name>
    		<maml:description>
				<maml:para>Provides the name of the output file for the LogFileEventConsumer.</maml:para>
                <maml:para>Default file name is target hostname.</maml:para>
    		</maml:description>
    		<command:parameterValue required="false" variableLength="false">string</command:parameterValue>
			<dev:type>
  			<maml:name>string</maml:name> 
				<maml:uri /> 
				</dev:type>
 		<dev:defaultValue /> 
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false">
   			<maml:name>Text</maml:name>
    		<maml:description>
				<maml:para>Sets the text to output for the LogFileEventConsumer</maml:para>
    		</maml:description>
    		<command:parameterValue required="false" variableLength="false">string</command:parameterValue>
			<dev:type>
  			<maml:name>string</maml:name> 
				<maml:uri /> 
				</dev:type>
 		<dev:defaultValue /> 
		</command:parameter>
	</command:parameters>

<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					This cmdlet does not accept an input object.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Uproot.Signature</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					This cmdlet generates the Uproot.Signature object that is associated with the Permanent WMI Event Signature that was added.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	
<!-- Example section  --> 
	<command:examples>
		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$ComputerName = 'localhost'
$FileName = 'C:\Users\Uproot\Desktop\driver.txt'
$Name = 'DRIVER_CREATION'
$Query = "SELECT * FROM __InstanceCreationEvent WITHIN 1 WHERE TargetInstance ISA 'Win32_SystemDriver'"
$Text = "%TargetInstance.SystemName%|'DRIVER_CREATION'|%TIME_CREATED%|%TargetInstance.Name%|%TargetInstance.PathName%|%TargetInstance.Caption%|%TargetInstance.Started%|%TargetInstance.StartMode%|%TargetInstance.StartName%|%TargetInstance.ServiceType%"
Add-Signature -ComputerName $ComputerName -Name $Name -Query $Query -FileName $FileName -Text $Text -Type "LogFile" -Force</dev:code>
       		<dev:remarks>
                <maml:para>Description</maml:para>
                <maml:para>-----------</maml:para>
  			    <maml:para>This command creates a new signature.</maml:para>
	            <maml:para></maml:para>
	            <maml:para></maml:para>
	            <maml:para></maml:para>
	            <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>

<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>https://github.com/l00ps/Uproot/wiki/Get-Signature</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Signature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Signature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>about_Uproot_Cmdlets</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>

</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
            Get-Signature
		</command:name>
		<maml:description>
			<maml:para>Gets the WMI Event Subscription Signatures that are running on the local or remote computer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para>(c) 2014 Invoke-IR. All rights reserved.</maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Signature</command:noun>
		<dev:version>1.0.0.0</dev:version>
	</command:details>
	<maml:description>
		<maml:para>The Get-Signature cmdlet gets WMI Event Subscriptions on a local or remote computer.</maml:para>
        <maml:para>Without parameters, Get-Signature gets all of the WMI Event Subscriptions on the local computer. You can also specify a particular subscription by subscription name.</maml:para>
        <maml:para>When a specific name is used, Get-Signature will return an array of the __Filter, CommandLineEventConsumer, and __FilterToConsumerBinding corresponding with the given name. When no name is specified, the Get-Signature cmdlet will return all __FilterToConsumerBinding Objects. </maml:para>
	</maml:description>

	<!-- Cmdlet syntax section-->
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Signature</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Gets the WMI Event Subscriptions running on the specified computers. The default is the local computer.</maml:para>
            <maml:para>Type the NetBIOS name, and IP address, or a fully qulaified domain name of one or more computers.</maml:para>
            <maml:para>This parameter does not rely on Windows PowerShell remoting.  You can use the ComputerName parameter of Get-Signature as long as the remote computer has its RPC Server running.  Additionally, PowerShell must be run with appropriate credentials for the remote endpoint. </maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">string</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Signature</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Gets the WMI Event Subscriptions running on the specified computers. The default is the local computer.</maml:para>
            <maml:para>Type the NetBIOS name, and IP address, or a fully qulaified domain name of one or more computers.</maml:para>
            <maml:para>This parameter does not rely on Windows PowerShell remoting.  You can use the ComputerName parameter of Get-Signature as long as the remote computer has its RPC Server running.  Additionally, PowerShell must be run with appropriate credentials for the remote endpoint. </maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the Name of the intended Uproot Signature (WMI Event Subscription).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">string</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>

	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
			<maml:name>ComputerName</maml:name>
			<maml:description>
				<maml:para>Gets the WMI Event Subscriptions running on the specified computers. The default is the local computer.</maml:para>
                <maml:para>Type the NetBIOS name, and IP address, or a fully qulaified domain name of one or more computers.</maml:para>
                <maml:para>This parameter does not rely on Windows PowerShell remoting.  You can use the ComputerName parameter of Get-Signature as long as the remote computer has its RPC Server running.  Additionally, PowerShell must be run with appropriate credentials for the remote endpoint. </maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>localhost</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the Name of the intended Uproot Signature (WMI Event Subscription). </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	
    <!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					This cmdlet accepts one or more string(s) representing a computer hostname (based on the property name).
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Uproot.Signature[]</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					This cmdlet generates the Signature Objects that are associated with the Uproot WMI Event Subscription Objects.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>

	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-Signature

ComputerName              Name                      ConsumerType              
------------              ----                      ------------              
WIN-OL5AKAF1OUJ           SERVICE_DELETION          LogFileEventConsumer      
WIN-OL5AKAF1OUJ           DRIVER_DELETION           LogFileEventConsumer      
WIN-OL5AKAF1OUJ           DRIVER_CREATION           LogFileEventConsumer   
                        </dev:code>
       			<dev:remarks>
                    <maml:para>Description</maml:para>
                    <maml:para>-----------</maml:para>
  			        <maml:para>This command returns all the Uproot.Signature objects registered on the local system.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-Signature -Name "SERVICE_DELETION"

ComputerName              Name                      ConsumerType              
------------              ----                      ------------              
WIN-OL5AKAF1OUJ           SERVICE_DELETION          LogFileEventConsumer   
                        </dev:code>
       			<dev:remarks>
                    <maml:para>Description</maml:para>
                    <maml:para>-----------</maml:para>
  			        <maml:para>This command returns the Uproot.Signature object that is identified by the specified Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	
    <!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>https://github.com/l00ps/Uproot/wiki/Get-Signature</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-Signature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Signature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>about_Uproot_Cmdlets</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
            Remove-Signature
		</command:name>
		<maml:description>
			<maml:para>Removes specified WMI Event Subscription Signatures that are running on the local or remote computer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para>(c) 2014 Invoke-IR. All rights reserved.</maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Signature</command:noun>
		<dev:version>1.0.0.0</dev:version>
	</command:details>
	<maml:description>
		<maml:para>The Remove-Signature cmdlet deletes WMI Event Subscription.  Subscriptions can be passed via the pipeline from Get-Signature, or their name and type can be specified as arguments.</maml:para>
        <maml:para>Remove-Signature removes the Filter, Consumer, and Binding for each Signature.</maml:para>
	</maml:description>
	
	<!-- Cmdlet syntax section-->
    <command:syntax>
        <command:syntaxItem>
            <maml:name>Remove-Signature</maml:name>
            <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)">
                <maml:name>InputObject</maml:name>
                <maml:description>
                    <maml:para>An object created by Get-Signature that can be passed via the pipeline to Remove-Signature for deletion.</maml:para>
                </maml:description>
                <command:parameterValue required="true" variableLength="true">Uproot.Signature</command:parameterValue>
            </command:parameter>
        </command:syntaxItem>
        <command:syntaxItem>
            <maml:name>Remove-Signature</maml:name>
            <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
                <maml:name>ComputerName</maml:name>
                <maml:description>
                    <maml:para>Removes WMI Event Subscriptions running on the specified computers. The default is the local computer.</maml:para>
                    <maml:para>Type the NetBIOS name, and IP address, or a fully qulaified domain name of one or more computers.</maml:para>
                    <maml:para>This parameter does not rely on Windows PowerShell remoting.  You can use the ComputerName parameter of Get-Signature as long as the remote computer has its RPC Server running.  Additionally, PowerShell must be run with appropriate credentials for the remote endpoint.</maml:para>
                </maml:description>
                <command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
            </command:parameter>
            <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false">
                <maml:name>Name</maml:name>
                <maml:description>
                    <maml:para>Contains the name of the Signature that should be removed.</maml:para>
                    <maml:para>If an object is received via the pipeline, the Name parameter is not used.</maml:para>
                </maml:description>
                <command:parameterValue required="true" variableLength="true">string</command:parameterValue>
            </command:parameter>
        </command:syntaxItem>
    </command:syntax>

	<!-- Cmdlet parameter section  -->
	<command:parameters>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)">
            <maml:name>InputObject</maml:name>
            <maml:description>
                <maml:para>An object created by Get-Signature that can be passed via the pipeline to Remove-Signature for deletion.</maml:para>
            </maml:description>
            <command:parameterValue required="true" variableLength="true">Uproot.Signature</command:parameterValue>
		    <dev:type>
				<maml:name>Uproot.Signature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
            <maml:name>ComputerName</maml:name>
            <maml:description>
                <maml:para>Removes WMI Event Subscriptions running on the specified computers. The default is the local computer.</maml:para>
                <maml:para>Type the NetBIOS name, and IP address, or a fully qulaified domain name of one or more computers.</maml:para>
                <maml:para>This parameter does not rely on Windows PowerShell remoting.  You can use the ComputerName parameter of Get-Signature as long as the remote computer has its RPC Server running.  Additionally, PowerShell must be run with appropriate credentials for the remote endpoint.</maml:para>
            </maml:description>
            <command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>	
			<dev:type>
  				<maml:name>string[]</maml:name> 
				<maml:uri /> 
			</dev:type>
			<dev:defaultValue>localhost</dev:defaultValue>
		</command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false">
            <maml:name>Name</maml:name>
            <maml:description>
                <maml:para>Contains the name of the Signature that should be removed.</maml:para>
                <maml:para>If an object is received via the pipeline, the Name parameter is not used.</maml:para>
            </maml:description>
            <command:parameterValue required="true" variableLength="true">string</command:parameterValue>	
			<dev:type>
  			    <maml:name>string</maml:name> 
				<maml:uri /> 
			</dev:type>
		    <dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>

	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Uproot.Signature</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					This cmdlet accepts one or more Uproot.Signature objects as input that populates the InputObject parameter.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					This cmdlet does not generate any output.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>

	<!-- Example section  --> 
	<command:examples>
		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code> Get-Signature | Remove-Signature</dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>This command removes all of the Signatures on the local machine.</maml:para>
                    <maml:para>The output of the Get-Signature cmdlet is piped to the Remove-Signature cmdlet. The output is a set of Uproot.Signature objects.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>https://github.com/l00ps/Uproot/wiki/Get-Signature</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-Signature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Signature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>about_Uproot_Cmdlets</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>


</helpItems>
